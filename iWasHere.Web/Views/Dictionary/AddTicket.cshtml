@model iWasHere.Domain.DTOs.DictionaryTicketTypeModel

@{
    ViewData["Title"] = "Editare/Adaugare Tip Bilet";
}

@using (Html.BeginForm("UpdateTicket", "Dictionary", FormMethod.Post, new { onsubmit = "onSubmit(e)" }))
{
    @TempData["message"];
    <div>
        <span>Nume Bilet:</span> @Html.Kendo().TextBoxFor(m => m.Name)
        <br />
        <span>Cod Bilet: </span> @Html.Kendo().TextBoxFor(m => m.Code)
        <br />
        <span>Descriere: </span>  @Html.Kendo().TextBoxFor(m => m.Description)
        <br />
        @Html.HiddenFor(m => m.TicketTypeId)
        @if (Model.TicketTypeId == 0)
        {
            @(Html.Kendo().Button()
                .Name("savenew")
                .Content("Salveaza si nou")
                .HtmlAttributes(new { type = "submit", name = "submit", value = "Salveaza si nou" }))
        }
        @(Html.Kendo().Button()
                   .Name("save")
                   .Content("Salveaza")
                   .HtmlAttributes(new { type = "submit", name = "submit", value = "Salveaza" }))

        @(Html.Kendo().Button()
               .Name("back")
               .Content("Anuleaza")
               .HtmlAttributes(new { type = "button", name = "submit", value = "Anuleaza" })
               .Events(ev => ev.Click("onClick")))
    </div>
}

<script>
    function onClick(e)
    {
        if ($(e.event.target).closest(".k-button").attr("id") == "back")
        {
                    window.location = '@Url.Action("Tickets", "Dictionary")';
        }
    }
</script>
