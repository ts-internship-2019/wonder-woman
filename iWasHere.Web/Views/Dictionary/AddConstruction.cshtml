@model iWasHere.Domain.Models.DictionaryConstructionType
@{
    ViewData["Title"] = "AddConstruction";
}




@using (Html.BeginForm("UpdateConstruction", "Dictionary", FormMethod.Post))
{
    @Html.HiddenFor(a => a.ConstructionTypeId)
    <div>
        <span>Nume Constructie:</span> @Html.TextBoxFor(m => m.Name)
        <br />
        <span>Cod Constructie: </span> @Html.TextBoxFor(m => m.Code)
        <br />
        <span>Descriere: </span>@Html.TextBoxFor(m => m.Description)
        <br />
        @Html.HiddenFor(m => m.ConstructionTypeId)
        @if (Model.ConstructionTypeId == 0)
        {
            @(Html.Kendo().Button()
                    .Name("savenew")
                    .Content("Salveaza si nou")
                    .HtmlAttributes(new { type = "submit", name = "submitButton", value = "Salveaza si nou" }))
        }
      
        @(Html.Kendo().Button()
                .Name("save")
                .Content("Salveaza")
                .HtmlAttributes(new { type = "submit", name = "submitButton", value = "Salveaza" }))
       


        @(Html.Kendo().Button()
               .Name("back")
               .Content("Anuleaza")
               .HtmlAttributes(new { type = "button", name = "submitButton", value = "Anuleaza" })
               .Events(ev => ev.Click("onClick")))
    </div>

}
<script>

    function onClick(e) {
            if ($(e.event.target).closest(".k-button").attr("id") == "back") {
                 window.location = '@Url.Action("Construction", "Dictionary")';
            }
        }
</script>