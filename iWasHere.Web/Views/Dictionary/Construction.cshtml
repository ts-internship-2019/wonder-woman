@model IEnumerable<iWasHere.Domain.DTOs.DictionaryConstructionTypeModel>





<td>
    @(Html.Kendo().Button()
        .Name("addbtn")
        .Icon("add-btn")
        .Content("Add Construction")
        .HtmlAttributes(new { type = "button" })
        .Events(ev => ev.Click("onClick")))
</td>
<div>
    <table>
        <tr>
            <td>
                <label for="constructionNamer">Nume constructie:</label>
                @(Html.Kendo().TextBox()
                    .HtmlAttributes(new
                            {
                        id = "constructionName"
                            })
                    .Name("constructionName")
                    .Value("")
                )
            </td>

            <td>
                @(Html.Kendo().Button()
                    .Name("filterBtn")
                    .Content("Filtreaza")
                    .Icon("filter")
                    .HtmlAttributes(new { type = "button" })
                    .Events(ev => ev.Click("onClick")))
            </td>
            <td>
                @(Html.Kendo().Button()
                    .Name("clearFilterBtn")
                    .Icon("clear-filter")
                    .Content("Reseteaza Filtru")
                    .HtmlAttributes(new { type = "button" })
                    .Events(ev => ev.Click("onClick")))
            </td>
        </tr>
    </table>
</div>
<div>
    @(Html.Kendo().Grid(Model)
            .Name("Grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.Code).Width(100);
                columns.Bound(c => c.Name).Width(100);
                columns.Bound(c => c.Description);
                columns.Template("<a class='k-button' href='/Dictionary/AddConstruction?Id=#=ConstructionTypeId# '> Edit</a>").Width(150);
                columns.Command(cmd => { cmd.Destroy();});
            })
            .HtmlAttributes(new { style = "height: 500dp;" })
            .Scrollable()
            .Sortable()
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(5)
                .ServerOperation(true)
                .Read(read => read.Action("GetConstruction", "Dictionary").Data("constructionReadData"))
                 .Model(model => model.Id(p => p.ConstructionTypeId))
                  .Destroy(update => update.Action("DestroyConstruction", "Dictionary"))
               )

    )
    )
    </div>
    <script type="text/javascript">
        var construction = "";
        function constructionReadData() {
            return {
                filterName: construction
            };
        }
        function onClick(e) {
            if ($(e.event.target).closest(".k-button").attr("id") == "clearFilterBtn") {
                $('#constructionName').val(null);
                construction = "";
                $('#Grid').data("kendoGrid").dataSource.read();
                $('#Grid').data("kendoGrid").dataSource.page(1);
            }
            if
                ($(e.event.target).closest(".k-button").attr("id") == "addbtn") {
                window.location = '@Url.Action("AddConstruction","Dictionary")';
            }
            if ($(e.event.target).closest(".k-button").attr("id") == "filterBtn") {
                construction = $('#constructionName').val();
                $('#Grid').data("kendoGrid").dataSource.read();
                $('#Grid').data("kendoGrid").dataSource.page(1);
            }
        }</script>
