@model iWasHere.Domain.DTOs.LandmarkModel

@{
    ViewData["Title"] = "Adauga/Editeaza obiective";

    List<string> images = ViewData["Images"] as List<string>;

}
<style>

    img {
        height: 60px;
    }
    div {
        align-self: center
    }
    .k-textbox{
        padding-left: 5em
    }
</style>
@using (Html.BeginForm("LandmarkSubmit", "Home", FormMethod.Post))
{
    <label for="Name">Name :</label>
    @(Html.Kendo().TextBoxFor(m => m.Name)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Landmark Name!"
        })
    )
    <br />

    <label for="Description">Description :</label>
    @(Html.Kendo().TextBoxFor(m => m.Descr)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Landmark Description!"
        })
    )
    <br />

    <label for="Name">Code :</label>
    @(Html.Kendo().TextBoxFor(m => m.Code)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Landmark Code!"
        })
    )

    <br />

    <div id="images">
        <table>
            @{if (Model.LandmarkId != 0)
                {
                    int i = 0;
                    foreach (string image in images)
                    {
                        if (i == 0)
                        {
                            @:<tr>
                            }

                            <td>

                                <img src="@Url.Content(image)" class=" img-fluid" width="90px" />

                            </td>

                            if (i == 3)
                            {
                                i = 0;
                            @:</tr>
                        }
                        ++i;

                    }
                }
            }
        </table>
    </div>

    <div>

        <label for="uploadImage">Upload images:</label>

    </div>

    <div class="demo-section k-content">
        @(Html.Kendo().Upload()
            .Name("files")
            .HtmlAttributes(new { aria_label = "files" })
        )
    </div>


    <br />

    <label for="Ticket">Ticket :</label>
    <input type="checkbox" data-bind="checked: isChecked" />
    <br />

//    <label for="Price">Ticket Type :</label>
 //   @(Html.Kendo().ComboBoxFor(c => c.LandmarkTypeId)
//.Name("landmarks")
@*.Placeholder("Selecteaza tip atractie!")
.DataTextField("Name")
.DataValueField("LandmarkTypeId")
.HtmlAttributes(new { style = "width:100%;" })
.Filter(FilterType.Contains)
.AutoBind(true)
.MinLength(3)
.DataSource(source =>
{
   source.Read(read =>
   {
       read.Action("Landmarks_Read_ForCB", "Home");
   })
   .ServerFiltering(true);
})
   )*@
    <br />

    <label for="LandmarkType">Landmark Type :</label>
    <td>
        @(Html.Kendo().ComboBoxFor(c => c.LandmarkTypeId)
                //.Name("landmarks")
                .Placeholder("Selecteaza tip atractie!")
                .DataTextField("Name")
                .DataValueField("LandmarkTypeId")
                .HtmlAttributes(new { style = "width:100%;" })
                .Filter(FilterType.Contains)
                .AutoBind(true)
                .MinLength(3)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("Landmarks_Read_ForCB", "Home");
                    })
                    .ServerFiltering(true);
                })
        )
    </td>
    <br />

    @*<label for="Time">Time Schedule :</label>
        <td>
            @(Html.Kendo().ComboBox()
                    .Name("landmarks")
                    .Placeholder("Selecteaza ora vizita!")
                    .DataTextField("Name")
                    .DataValueField("LandmarkId")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .Filter(FilterType.Contains)
                    .AutoBind(true)
                    .MinLength(3)
                    .DataSource(source =>
                        {
                            source.Read(read =>
                        {
                            read.Action("Landmarks_Read_ForCB", "Home");
                        })
                            .ServerFiltering(true);
                        })
            )
        </td>
        <br />*@

    <label for="City">City :</label>
    <td>
        @(Html.Kendo().ComboBoxFor(c => c.CityId)
                //.Name("cities")
                .Placeholder("Selecteaza orasul!")
                .DataTextField("Name")
                .DataValueField("Id")
                .HtmlAttributes(new { style = "width:100%;" })
                .Filter(FilterType.Contains)
                .AutoBind(true)
                .MinLength(3)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("Cities_Read_ForCB", "Home");
                    })
                    .ServerFiltering(true);
                })
        )
    </td>
    <br />

    <label for="Construction">Construction :</label>
    <td>
        @(Html.Kendo().ComboBoxFor(c => c.ConstructionTypeId)
                //.Name("constructions")
                .Placeholder("Selecteaza constructia!")
                .DataTextField("Name")
                .DataValueField("ConstructionTypeId")
                .HtmlAttributes(new { style = "width:100%;" })
                .Filter(FilterType.Contains)
                .AutoBind(true)
                .MinLength(3)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("Constructions_Read_ForCB", "Home");
                    })
                    .ServerFiltering(true);
                })
        )
    </td>
    <br />

    <label for="Lat">Coord latitude:</label>
    @(Html.Kendo().TextBoxFor(m => m.Latitude)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Latitude!"
        })
    )
    <label for="Long">Coord longitude:</label>
    @(Html.Kendo().TextBoxFor(m => m.Longitude)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Longitude!"
        })
    )
    <br />

    <div class="demo-section k-content">
        @(Html.Kendo().Button()
            .Name("btnSave")
            .Content("Save")
            .HtmlAttributes(new { name = "btnSave", style = "background: green", type = "submit", value = "Save" })
            .Events(ev => ev.Click("onClick")))
    </div>
    <br />

    if (Model.LandmarkId == 0)
    {
        <div class="demo-section k-content">
            @(Html.Kendo().Button()
                .Name("btnSave")
                .Content("Save and New")
                .HtmlAttributes(new { name = "btnSave", style = "background: green", type = "submit", value = "Save and New" })
                .Events(ev => ev.Click("onClick")))
        </div>
    }
    <br />

    <div class="demo-section k-content">
        @(Html.Kendo().Button()
            .Name("btnSave")
            .Content("Cancel")
            .HtmlAttributes(new { name = "btnSave", style = "background:red", type = "submit", value = "Cancel" })
            .Events(ev => ev.Click("onClick")))
    </div>
    <br />

    @Html.HiddenFor(h => h.LandmarkId);
    @Html.HiddenFor(h => h.ConstructionTypeId);
    @Html.HiddenFor(h => h.HistoricalPeriodTypeId);
    @Html.HiddenFor(h => h.LandmarkTypeId);
    @Html.HiddenFor(h => h.CountryId);
    @Html.HiddenFor(h => h.CountyId);
    @Html.HiddenFor(h => h.CityId);
}

<script>

    var viewModel = kendo.observable({
        isChecked: false
    });

    kendo.bind($("input"), viewModel);

</script>
