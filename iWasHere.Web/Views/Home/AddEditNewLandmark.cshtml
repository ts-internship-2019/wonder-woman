@model iWasHere.Domain.Models.Landmark
@{
    ViewData["Title"] = "Adauga/Editeaza obiective";
}


@using (Html.BeginForm("LandmarkSubmit", "Home", FormMethod.Post))
{ 
    <label for="Name">Name :</label>
    @(Html.Kendo().TextBoxFor(m => m.Name)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Landmark Name!"
        })
    )
    <br />

    <label for="Description">Description :</label>
    @(Html.Kendo().TextBoxFor(m => m.LandmarkType.Description)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Landmark Description!"
        })
    )
    <br />

    <div class="demo-section k-content">
        @(Html.Kendo().Button()
            .Name("btnLoading")
            .Content("Loading picture")
            .HtmlAttributes(new { name = "btnLoading", style = "background: yellow" })
            .Events(ev => ev.Click("onClick")))
    </div>
    <br />

    <label for="Ticket">Ticket :</label>
    <input type="checkbox" data-bind="checked: isChecked" />
    <br />

    <label for="Price">Ticket Price :</label>
    @(Html.Kendo().TextBoxFor(m =>m.LandmarkXticket)
        .HtmlAttributes(new
        {
            validationmessage = "Enter Ticket Price!"
        })
    )
    <br />
    <br />

    <label for="LandmarkType">Landmark Type :</label>
    <td>
        @(Html.Kendo().ComboBox()
                .Name("landmarks")
                .Placeholder("Selecteaza tip atractie!")
                .DataTextField("Name")
                .DataValueField("LandmarkId")
                .HtmlAttributes(new { style = "width:100%;" })
                .Filter(FilterType.Contains)
                .AutoBind(true)
                .MinLength(3)
                .DataSource(source =>
                    {
                        source.Read(read =>
                    {
                        read.Action("Landmarks_Read_ForCB", "Home");
                    })
                        .ServerFiltering(true);
                    })
        )
    </td>
    <br />

    <label for="Time">Time Schedule :</label>
    <td>
        @(Html.Kendo().ComboBox()
                .Name("landmarks")
                .Placeholder("Selecteaza ora vizita!")
                .DataTextField("Name")
                .DataValueField("LandmarkId")
                .HtmlAttributes(new { style = "width:100%;" })
                .Filter(FilterType.Contains)
                .AutoBind(true)
                .MinLength(3)
                .DataSource(source =>
                    {
                        source.Read(read =>
                    {
                        read.Action("Landmarks_Read_ForCB", "Home");
                    })
                        .ServerFiltering(true);
                    })
        )
    </td>
    <br />

    <div class="demo-section k-content">
        @(Html.Kendo().Button()
            .Name("btnSave")
            .Content("Save")
            .HtmlAttributes(new { name = "btnSave", style = "background: green", type = "submit", value = "Save" })
            .Events(ev => ev.Click("onClick")))
    </div>

    if (Model == null)
    {
        <div class="demo-section k-content">
            @(Html.Kendo().Button()
                .Name("btnSave")
                .Content("Save and New")
                .HtmlAttributes(new { name = "btnSave", style = "background: green", type = "submit", value = "Save and New" })
                .Events(ev => ev.Click("onClick")))
        </div>
    }

    <div class="demo-section k-content">
        @(Html.Kendo().Button()
            .Name("btnSave")
            .Content("Cancel")
            .HtmlAttributes(new { name = "btnSave", style = "background:red", type = "submit", value = "Cancel" })
            .Events(ev => ev.Click("onClick")))
    </div>


    @Html.HiddenFor(h => h.LandmarkId);
    @Html.HiddenFor(h => h.ConstructionTypeId);
    @Html.HiddenFor(h => h.HistoricalPeriodTypeId);
    @Html.HiddenFor(h => h.LandmarkTypeId);
    @Html.HiddenFor(h => h.CountryId);
    @Html.HiddenFor(h => h.CountyId);
    @Html.HiddenFor(h => h.CityId);
}

<script>
    var viewModel = kendo.observable({
        isChecked: false
    });

    kendo.bind($("input"), viewModel);
</script>